print('\n' + 'Задание #1' + '*' * 100)
# 1. Выяснить тип результата выражений:
print(type(15 * 3))  # int
print(type(15 / 3))  # float !!! для простого деления
print(type(15 // 2))  # int
print(type(15 ** 2))  # int



print('\n' + 'Задание #2' + '*' * 100)
# 2. Дан список:
list = ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']

# Необходимо его обработать — обособить каждое целое число (вещественные не трогаем) кавычками (добавить кавычку до
# и кавычку после элемента списка, являющегося числом) и дополнить нулём до двух целочисленных разрядов:
# ['в', '"', '05', '"', 'часов', '"', '17', '"', 'минут', 'температура', 'воздуха', 'была', '"', '+05', '"', 'градусов']
# Подумать, какое условие записать, чтобы выявить числа среди элементов списка? Как модифицировать это условие для
# чисел со знаком?
# Примечание: если обособление чисел кавычками не будет получаться - можете вернуться к его реализации позже. Главное:
# дополнить числа до двух разрядов нулём!
# Сформировать из обработанного списка строку:
# в "05" часов "17" минут температура воздуха была "+05" градусов
new_list = []
for i in range(len(list)):
    if list[i].isdigit():
        value = f'0{list[i]}'
        new_list.append(f'"{value}"')

    elif list[i][0] in '+-':
        sign = list[i][0]
        value = f'{sign}0{list[i][1:]}'
        new_list.append(f'"{value}"')

    elif not list[i].isdigit():
        value = list[i]
        new_list.extend([value])
str_list = ' '.join(new_list)

print(*new_list)

print(str_list)



print('\n' + 'Задание #4' + '*' * 100)
# 4. Дан список, содержащий искажённые данные с должностями и именами сотрудников:
# Известно, что имя сотрудника всегда в конце строки. Сформировать и вывести на экран фразы вида: 'Привет, Игорь!'
# Подумать, как получить имена сотрудников из элементов списка, как привести их к корректному виду. Можно ли при этом
# не создавать новый список?

list = ['инженер-конструктор Игорь', 'главный бухгалтер МАРИНА', 'токарь высшего разряда нИКОЛАй', 'директор аэлита']

for i in list:
    temp = i.split(' ')[-1]

    # вариант 1
    print(f'Привет, {temp[0].upper()}{temp[1:].lower()}')

    # вариант 2
    print(f'Привет, {temp.title()}')




print('\n' + 'Задание #5' + '*' * 100)
# 5. Создать список, содержащий цены на товары (10–20 товаров), например:
# [57.8, 46.51, 97, ...]
#
# Вывести на экран эти цены через запятую в одну строку, цена должна отображаться в виде <r> руб <kk> коп (например
# «5 руб 04 коп»). Подумать, как из цены получить рубли и копейки, как добавить нули, если, например, получилось
# 7 копеек или 0 копеек (должно быть 07 коп или 00 коп).
# Вывести цены, отсортированные по возрастанию, новый список не создавать (доказать, что объект списка после
# сортировки остался тот же).
# Создать новый список, содержащий те же цены, но отсортированные по убыванию.
# Вывести цены пяти самых дорогих товаров. Сможете ли вывести цены этих товаров по возрастанию, написав минимум кода?

# Решение:
list = [57.8, 46.51, 97, 34.66, 77.43, 88, 14.3, 5.4, 47.6, 35.76]

new_list = []

for i in list:
    temp = str(i)  # Сохранили элемент списка как строку

    if len(temp) == 2:
        new_list.append(f'{temp[:2]} руб 00 коп')

    elif len(temp) == 3:
        new_list.append(f'0{temp[:1]} руб {temp[2:]}0 коп')

    elif len(temp) == 4:
        new_list.append(f'{temp[:2]} руб {temp[3:]}0 коп')

    else:
        new_list.append(f'{temp[:2]} руб {temp[3:]} коп')

# Вывести на экран эти цены через запятую в одну строку, цена должна отображаться в виде <r> руб <kk> коп (например
# «5 руб 04 коп»)
print(new_list)

# ID до сортировки
print(id(new_list))

# Сотрируем по возрастанию
sorted(new_list)

# ID после сортировки
print(id(sorted(list)))

print(new_list)


# Создать новый список, содержащий те же цены, но отсортированные по убыванию.
# Отсортируем список по быванию
list.sort(reverse=True)

new_list = []

for i in list:
    temp = str(i)  # Сохранили элемент списка как строку

    if len(temp) == 2:
        new_list.append(f'{temp[:2]} руб 00 коп')

    elif len(temp) == 3:
        new_list.append(f'0{temp[:1]} руб {temp[2:]}0 коп')

    elif len(temp) == 4:
        new_list.append(f'{temp[:2]} руб {temp[3:]}0 коп')

    else:
        new_list.append(f'{temp[:2]} руб {temp[3:]} коп')

print(new_list)

# Вывести цены пяти самых дорогих товаров
print(new_list[:5])
